# version: "3.10"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile  # Ensure you have a Dockerfile for Django
    container_name: django_app
    restart: always
    command: >
      sh -c "python manage.py migrate &&
             gunicorn --workers 3 --bind 0.0.0.0:8000 django_project.wsgi:application"
    volumes:
      - .:/usr/src/app
      - static_volume_live:/usr/src/app/staticfiles
      # - ./staticfiles:/usr/src/app/staticfiles/drf-yasg

    ports:
      # - "8080:8000"
      - "8080:8080"
    depends_on:
      - postgres_service
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
    networks:
      - app-network_live

  postgres_service:
    image: postgres:15
    container_name: backend
    restart: always
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network_live

volumes:
  static_volume_live:
  postgres_data:

networks:
  app-network_live:
    external: true
