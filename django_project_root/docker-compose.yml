# version: '3.10'

services:
  # based on current Dockerfile image which contains: djago application, preinstalled gunicorn.
  web:
    build: .
    container_name: django_app
    restart: always
    command: >
      sh -c "python manage.py migrate &&
             gunicorn --workers 3 --bind 0.0.0.0:8000 django_project.wsgi:application"
    volumes:
      - .:/usr/src/app
      - static_volume_live:/usr/src/app/staticfiles
    # map container port to host machine port
    ports:
      - "8000:8000"
    depends_on:
      - postgres_service
    environment:
      - DATABASE_NAME=postgres_db
      - DATABASE_USER=postgres_user
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres_service
      - DATABASE_PORT=5432
    networks:
      - app-network_live

  # based on postgres image
  # with the start of container ie. service, the below DB will be created
  postgres_service:
    image: postgres:latest
    container_name: postgres_service_container
    restart: always
    environment:
      POSTGRES_DB: postgres_db
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network_live

volumes:
  static_volume_live:
  postgres_data:

networks:
  app-network_live:
    name: app-network_live
    driver: bridge